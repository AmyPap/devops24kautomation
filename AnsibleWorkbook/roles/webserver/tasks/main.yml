---
 - name: Set up SSL certificates
   import_tasks: ssl.yml

 - name: Ensure nginx is installed
   ansible.builtin.package:
     name: nginx
     state: latest

 - name: Ensure the nginx configuration is updated for example.internal
   ansible.builtin.copy:
     src: "{{ playbook_dir }}/files/example.internal.conf"
     dest: /etc/nginx/conf.d/example.internal.conf
   notify: reload nginx

 - name: Ensure nginx is started at boot
   ansible.builtin.service:
      name: nginx
      enabled: true
      state: started

 - name: Ensure all groups exist
   ansible.builtin.group:
     name: "{{ item }}"
     state: present
   loop: "{{ groups_to_create }}"

 - name: Add user gecos
   ansible.builtin.user:
     name: "{{ item.name }}"
     groups: "{{ item.groups | join(',') }}"
     comment: "{{ item.gecos }}"
     password: "{{ user_passwords[item.name] | password_hash('sha512') }}"
     append: yes
     state: present
   loop: "{{ users }}"

 - name: Copy HTTPS configuration to nginx
   ansible.builtin.template:
     src: "{{ playbook_dir }}/templates/example.internal.conf.j2"
     dest: /etc/nginx/conf.d/https.conf
     owner: root
     group: root
     mode: '0644'
   notify: reload nginx

 - name: Ensure the directory structure for example.internal exists
   ansible.builtin.file:
     path: /var/www/example.internal/html
     state: directory
     owner: root
     group: root
     mode: '0755'
     setype: httpd_sys_content_t

 - name: Upload index.html to the virtual host folder
   ansible.builtin.copy:
     src: "{{ playbook_dir }}/files/index.html"
     dest: /var/www/example.internal/html/index.html
     owner: root
     group: root
     mode: '0644'
     setype: httpd_sys_content_t
